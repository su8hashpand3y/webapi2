// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebApi1.Models;

namespace WebApi1.Migrations
{
    [DbContext(typeof(WebApiDBContext))]
    [Migration("20180812115144_j1")]
    partial class j1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi1.Models.Inbox", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsMyMessage");

                    b.Property<bool>("IsRead");

                    b.Property<string>("Message");

                    b.Property<Guid>("MessageGroupUniqueGuid");

                    b.Property<string>("UserIdentifier");

                    b.Property<string>("UserUniqueId");

                    b.HasKey("Id");

                    b.ToTable("Inbox");
                });

            modelBuilder.Entity("WebApi1.Models.Reply", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsMyMessage");

                    b.Property<bool>("IsRead");

                    b.Property<string>("Message");

                    b.Property<Guid>("MessageGroupUniqueGuid");

                    b.Property<string>("UserUniqueId");

                    b.HasKey("Id");

                    b.ToTable("Reply");
                });

            modelBuilder.Entity("WebApi1.Models.ReplyMessageInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsFav");

                    b.Property<Guid>("MessageGroupUniqueGuid");

                    b.Property<string>("UserUniqueId");

                    b.HasKey("Id");

                    b.ToTable("ReplyMessageInfo");
                });

            modelBuilder.Entity("WebApi1.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AnonymousNotAllowed");

                    b.Property<string>("Ans1");

                    b.Property<string>("Ans2");

                    b.Property<string>("Ans3");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("PhotoUrl");

                    b.Property<bool>("PublicSearchNotAvailable");

                    b.Property<string>("UserUniqueId");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApi1.Models.UserMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsFav");

                    b.Property<Guid>("MessageGroupUniqueGuid");

                    b.Property<string>("UserUniqueId");

                    b.HasKey("Id");

                    b.ToTable("UserMessage");
                });

            modelBuilder.Entity("WebApi1.Models.UserReply", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsFav");

                    b.Property<Guid>("MessageGroupUniqueGuid");

                    b.Property<string>("UserUniqueId");

                    b.HasKey("Id");

                    b.ToTable("UserReply");
                });
#pragma warning restore 612, 618
        }
    }
}
